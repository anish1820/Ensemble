{"ast":null,"code":"export var validateUserId = function validateUserId(userId) {\n  if (!userId || userId.trim() === '') {\n    return false;\n  }\n  var alphanumericRegex = /^[a-zA-Z0-9]+$/;\n  return alphanumericRegex.test(userId);\n};","map":{"version":3,"names":["validateUserId","userId","trim","alphanumericRegex","test"],"sources":["/home/runner/workspace/src/utils/validators.js"],"sourcesContent":["/**\n * Validate the user ID format\n * @param {string} userId - The user ID to validate\n * @returns {boolean} - Whether the user ID is valid\n */\nexport const validateUserId = (userId) => {\n  // User ID should be non-empty and contain only alphanumeric characters\n  if (!userId || userId.trim() === '') {\n    return false;\n  }\n  \n  // Check if userId contains only alphanumeric characters\n  const alphanumericRegex = /^[a-zA-Z0-9]+$/;\n  return alphanumericRegex.test(userId);\n};\n"],"mappings":"AAKA,OAAO,IAAMA,cAAc,GAAG,SAAjBA,cAAcA,CAAIC,MAAM,EAAK;EAExC,IAAI,CAACA,MAAM,IAAIA,MAAM,CAACC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;IACnC,OAAO,KAAK;EACd;EAGA,IAAMC,iBAAiB,GAAG,gBAAgB;EAC1C,OAAOA,iBAAiB,CAACC,IAAI,CAACH,MAAM,CAAC;AACvC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}